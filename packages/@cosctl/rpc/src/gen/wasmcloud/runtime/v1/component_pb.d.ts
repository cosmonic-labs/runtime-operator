// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts"
// @generated from file wasmcloud/runtime/v1/component.proto (package wasmcloud.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Link } from "./link_pb";
import type { WitInterface } from "./wit_interface_pb";
import type { WorkloadStatus } from "./workload_pb";

/**
 * Describes the file wasmcloud/runtime/v1/component.proto.
 */
export declare const file_wasmcloud_runtime_v1_component: GenFile;

/**
 * @generated from message wasmcloud.runtime.v1.ComponentStartRequest
 */
export declare type ComponentStartRequest = Message<"wasmcloud.runtime.v1.ComponentStartRequest"> & {
  /**
   * @generated from field: string namespace = 1;
   */
  namespace: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: map<string, string> annotations = 3;
   */
  annotations: { [key: string]: string };

  /**
   * @generated from field: string image = 4;
   */
  image: string;

  /**
   * @generated from field: bytes image_pull_secret = 5;
   */
  imagePullSecret: Uint8Array;

  /**
   * @generated from field: uint32 max_instances = 6;
   */
  maxInstances: number;

  /**
   * @generated from field: map<string, string> config = 7;
   */
  config: { [key: string]: string };

  /**
   * if we need secrets, altho i'd leave it out. the host does the xkey dance
   * locally.
   *
   * @generated from field: map<string, string> secrets = 8;
   */
  secrets: { [key: string]: string };

  /**
   * Host-to-component links
   *
   * @generated from field: repeated wasmcloud.runtime.v1.Link imports = 9;
   */
  imports: Link[];

  /**
   * Meaning: "I want to expose this interface to the host rpc mesh"
   *
   * @generated from field: repeated wasmcloud.runtime.v1.WitInterface exports = 10;
   */
  exports: WitInterface[];
};

/**
 * Describes the message wasmcloud.runtime.v1.ComponentStartRequest.
 * Use `create(ComponentStartRequestSchema)` to create a new message.
 */
export declare const ComponentStartRequestSchema: GenMessage<ComponentStartRequest>;

/**
 * @generated from message wasmcloud.runtime.v1.ComponentStartResponse
 */
export declare type ComponentStartResponse = Message<"wasmcloud.runtime.v1.ComponentStartResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: wasmcloud.runtime.v1.WorkloadStatus status = 2;
   */
  status: WorkloadStatus;
};

/**
 * Describes the message wasmcloud.runtime.v1.ComponentStartResponse.
 * Use `create(ComponentStartResponseSchema)` to create a new message.
 */
export declare const ComponentStartResponseSchema: GenMessage<ComponentStartResponse>;

