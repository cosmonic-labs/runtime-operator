// @generated by protoc-gen-es v2.2.3 with parameter "target=js+dts"
// @generated from file wasmcloud/runtime/v1/host_service.proto (package wasmcloud.runtime.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import type { ComponentStartRequestSchema, ComponentStartResponseSchema } from "./component_pb";
import type { ProviderStartRequestSchema, ProviderStartResponseSchema } from "./provider_pb";
import type { WorkloadStatusRequestSchema, WorkloadStatusResponseSchema } from "./workload_status_pb";
import type { WorkloadStopRequestSchema, WorkloadStopResponseSchema } from "./workload_stop_pb";

/**
 * Describes the file wasmcloud/runtime/v1/host_service.proto.
 */
export declare const file_wasmcloud_runtime_v1_host_service: GenFile;

/**
 * Control Plane -> Host
 * This is the shape of messages exchanged between the control plane and the
 * host.
 * The Control-Plane waits for the first heartbeat then start sending
 * requests for HostService
 *
 * @generated from service wasmcloud.runtime.v1.HostService
 */
export declare const HostService: GenService<{
  /**
   * Separate entrypoints for each workload type
   *
   * @generated from rpc wasmcloud.runtime.v1.HostService.ComponentStart
   */
  componentStart: {
    methodKind: "unary";
    input: typeof ComponentStartRequestSchema;
    output: typeof ComponentStartResponseSchema;
  },
  /**
   * @generated from rpc wasmcloud.runtime.v1.HostService.ProviderStart
   */
  providerStart: {
    methodKind: "unary";
    input: typeof ProviderStartRequestSchema;
    output: typeof ProviderStartResponseSchema;
  },
  /**
   * For all workload types
   *
   * @generated from rpc wasmcloud.runtime.v1.HostService.WorkloadStatus
   */
  workloadStatus: {
    methodKind: "unary";
    input: typeof WorkloadStatusRequestSchema;
    output: typeof WorkloadStatusResponseSchema;
  },
  /**
   * @generated from rpc wasmcloud.runtime.v1.HostService.WorkloadStop
   */
  workloadStop: {
    methodKind: "unary";
    input: typeof WorkloadStopRequestSchema;
    output: typeof WorkloadStopResponseSchema;
  },
}>;

