// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: wasmcloud/runtime/v1/workload.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkloadStatus int32

const (
	// Sentinel value, should not be used
	WorkloadStatus_WORKLOAD_STATUS_UNSPECIFIED WorkloadStatus = 0
	// Workload "start" received by the host and workload is starting.
	// The workload_id is now in the host's internal state.
	// The host might have not performed internal checks yet, resulting in
	// the workload not being started and going into the "error" state.
	WorkloadStatus_WORKLOAD_STATUS_STARTING WorkloadStatus = 1
	// Workload passed checks and is considered running
	WorkloadStatus_WORKLOAD_STATUS_RUNNING WorkloadStatus = 2
	// Workload completed execution
	// This indicates the workload executed to completion
	// Useful for wasi:cli/run workloads
	WorkloadStatus_WORKLOAD_STATUS_COMPLETED WorkloadStatus = 3
	// Workload "stop" received and stopping
	// The host continues to report the workload status
	// until the workload is fully stopped.
	// Then the host removes the workload from its internal state.
	WorkloadStatus_WORKLOAD_STATUS_STOPPING WorkloadStatus = 4
	// Workload failed to start or stopped due to an error
	WorkloadStatus_WORKLOAD_STATUS_ERROR WorkloadStatus = 5
)

// Enum value maps for WorkloadStatus.
var (
	WorkloadStatus_name = map[int32]string{
		0: "WORKLOAD_STATUS_UNSPECIFIED",
		1: "WORKLOAD_STATUS_STARTING",
		2: "WORKLOAD_STATUS_RUNNING",
		3: "WORKLOAD_STATUS_COMPLETED",
		4: "WORKLOAD_STATUS_STOPPING",
		5: "WORKLOAD_STATUS_ERROR",
	}
	WorkloadStatus_value = map[string]int32{
		"WORKLOAD_STATUS_UNSPECIFIED": 0,
		"WORKLOAD_STATUS_STARTING":    1,
		"WORKLOAD_STATUS_RUNNING":     2,
		"WORKLOAD_STATUS_COMPLETED":   3,
		"WORKLOAD_STATUS_STOPPING":    4,
		"WORKLOAD_STATUS_ERROR":       5,
	}
)

func (x WorkloadStatus) Enum() *WorkloadStatus {
	p := new(WorkloadStatus)
	*p = x
	return p
}

func (x WorkloadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_wasmcloud_runtime_v1_workload_proto_enumTypes[0].Descriptor()
}

func (WorkloadStatus) Type() protoreflect.EnumType {
	return &file_wasmcloud_runtime_v1_workload_proto_enumTypes[0]
}

func (x WorkloadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadStatus.Descriptor instead.
func (WorkloadStatus) EnumDescriptor() ([]byte, []int) {
	return file_wasmcloud_runtime_v1_workload_proto_rawDescGZIP(), []int{0}
}

type WorkloadType int32

const (
	WorkloadType_WORKLOAD_TYPE_UNSPECIFIED WorkloadType = 0
	WorkloadType_WORKLOAD_TYPE_COMPONENT   WorkloadType = 1
	WorkloadType_WORKLOAD_TYPE_PROVIDER    WorkloadType = 2
)

// Enum value maps for WorkloadType.
var (
	WorkloadType_name = map[int32]string{
		0: "WORKLOAD_TYPE_UNSPECIFIED",
		1: "WORKLOAD_TYPE_COMPONENT",
		2: "WORKLOAD_TYPE_PROVIDER",
	}
	WorkloadType_value = map[string]int32{
		"WORKLOAD_TYPE_UNSPECIFIED": 0,
		"WORKLOAD_TYPE_COMPONENT":   1,
		"WORKLOAD_TYPE_PROVIDER":    2,
	}
)

func (x WorkloadType) Enum() *WorkloadType {
	p := new(WorkloadType)
	*p = x
	return p
}

func (x WorkloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_wasmcloud_runtime_v1_workload_proto_enumTypes[1].Descriptor()
}

func (WorkloadType) Type() protoreflect.EnumType {
	return &file_wasmcloud_runtime_v1_workload_proto_enumTypes[1]
}

func (x WorkloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkloadType.Descriptor instead.
func (WorkloadType) EnumDescriptor() ([]byte, []int) {
	return file_wasmcloud_runtime_v1_workload_proto_rawDescGZIP(), []int{1}
}

var File_wasmcloud_runtime_v1_workload_proto protoreflect.FileDescriptor

var file_wasmcloud_runtime_v1_workload_proto_rawDesc = string([]byte{
	0x0a, 0x23, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2a, 0xc4, 0x01, 0x0a, 0x0e,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x1b, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x4f,
	0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x57, 0x4f, 0x52,
	0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x4f,
	0x50, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x4f, 0x52, 0x4b, 0x4c,
	0x4f, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x05, 0x2a, 0x66, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x02, 0x42, 0xe3, 0x01, 0x0a, 0x18, 0x63,
	0x6f, 0x6d, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x6c, 0x61,
	0x62, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x73, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x57, 0x52, 0x58, 0xaa, 0x02, 0x14, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14,
	0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_wasmcloud_runtime_v1_workload_proto_rawDescOnce sync.Once
	file_wasmcloud_runtime_v1_workload_proto_rawDescData []byte
)

func file_wasmcloud_runtime_v1_workload_proto_rawDescGZIP() []byte {
	file_wasmcloud_runtime_v1_workload_proto_rawDescOnce.Do(func() {
		file_wasmcloud_runtime_v1_workload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wasmcloud_runtime_v1_workload_proto_rawDesc), len(file_wasmcloud_runtime_v1_workload_proto_rawDesc)))
	})
	return file_wasmcloud_runtime_v1_workload_proto_rawDescData
}

var file_wasmcloud_runtime_v1_workload_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_wasmcloud_runtime_v1_workload_proto_goTypes = []any{
	(WorkloadStatus)(0), // 0: wasmcloud.runtime.v1.WorkloadStatus
	(WorkloadType)(0),   // 1: wasmcloud.runtime.v1.WorkloadType
}
var file_wasmcloud_runtime_v1_workload_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wasmcloud_runtime_v1_workload_proto_init() }
func file_wasmcloud_runtime_v1_workload_proto_init() {
	if File_wasmcloud_runtime_v1_workload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wasmcloud_runtime_v1_workload_proto_rawDesc), len(file_wasmcloud_runtime_v1_workload_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wasmcloud_runtime_v1_workload_proto_goTypes,
		DependencyIndexes: file_wasmcloud_runtime_v1_workload_proto_depIdxs,
		EnumInfos:         file_wasmcloud_runtime_v1_workload_proto_enumTypes,
	}.Build()
	File_wasmcloud_runtime_v1_workload_proto = out.File
	file_wasmcloud_runtime_v1_workload_proto_goTypes = nil
	file_wasmcloud_runtime_v1_workload_proto_depIdxs = nil
}
