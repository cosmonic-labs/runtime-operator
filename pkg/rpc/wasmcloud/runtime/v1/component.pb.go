// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: wasmcloud/runtime/v1/component.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComponentStartRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Namespace       string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Annotations     map[string]string      `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Image           string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	ImagePullSecret []byte                 `protobuf:"bytes,5,opt,name=image_pull_secret,json=imagePullSecret,proto3" json:"image_pull_secret,omitempty"`
	MaxInstances    uint32                 `protobuf:"varint,6,opt,name=max_instances,json=maxInstances,proto3" json:"max_instances,omitempty"`
	Config          map[string]string      `protobuf:"bytes,7,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// if we need secrets, altho i'd leave it out. the host does the xkey dance
	// locally.
	Secrets map[string]string `protobuf:"bytes,8,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Host-to-component links
	Imports []*Link `protobuf:"bytes,9,rep,name=imports,proto3" json:"imports,omitempty"`
	// Meaning: "I want to expose this interface to the host rpc mesh"
	Exports       []*WitInterface `protobuf:"bytes,10,rep,name=exports,proto3" json:"exports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentStartRequest) Reset() {
	*x = ComponentStartRequest{}
	mi := &file_wasmcloud_runtime_v1_component_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentStartRequest) ProtoMessage() {}

func (x *ComponentStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wasmcloud_runtime_v1_component_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentStartRequest.ProtoReflect.Descriptor instead.
func (*ComponentStartRequest) Descriptor() ([]byte, []int) {
	return file_wasmcloud_runtime_v1_component_proto_rawDescGZIP(), []int{0}
}

func (x *ComponentStartRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ComponentStartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentStartRequest) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *ComponentStartRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ComponentStartRequest) GetImagePullSecret() []byte {
	if x != nil {
		return x.ImagePullSecret
	}
	return nil
}

func (x *ComponentStartRequest) GetMaxInstances() uint32 {
	if x != nil {
		return x.MaxInstances
	}
	return 0
}

func (x *ComponentStartRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ComponentStartRequest) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *ComponentStartRequest) GetImports() []*Link {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *ComponentStartRequest) GetExports() []*WitInterface {
	if x != nil {
		return x.Exports
	}
	return nil
}

type ComponentStartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        WorkloadStatus         `protobuf:"varint,2,opt,name=status,proto3,enum=wasmcloud.runtime.v1.WorkloadStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentStartResponse) Reset() {
	*x = ComponentStartResponse{}
	mi := &file_wasmcloud_runtime_v1_component_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentStartResponse) ProtoMessage() {}

func (x *ComponentStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wasmcloud_runtime_v1_component_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentStartResponse.ProtoReflect.Descriptor instead.
func (*ComponentStartResponse) Descriptor() ([]byte, []int) {
	return file_wasmcloud_runtime_v1_component_proto_rawDescGZIP(), []int{1}
}

func (x *ComponentStartResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentStartResponse) GetStatus() WorkloadStatus {
	if x != nil {
		return x.Status
	}
	return WorkloadStatus_WORKLOAD_STATUS_UNSPECIFIED
}

var File_wasmcloud_runtime_v1_component_proto protoreflect.FileDescriptor

var file_wasmcloud_runtime_v1_component_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x77, 0x61,
	0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x77,
	0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x05, 0x0a,
	0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x75, 0x6c, 0x6c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x4f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x52, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x61,
	0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x07, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x66, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x77, 0x61, 0x73, 0x6d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0xe4, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x73, 0x6d, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x57, 0x52, 0x58, 0xaa, 0x02, 0x14, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x57, 0x61,
	0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x20, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5c, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x57, 0x61, 0x73, 0x6d, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x3a, 0x3a, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_wasmcloud_runtime_v1_component_proto_rawDescOnce sync.Once
	file_wasmcloud_runtime_v1_component_proto_rawDescData []byte
)

func file_wasmcloud_runtime_v1_component_proto_rawDescGZIP() []byte {
	file_wasmcloud_runtime_v1_component_proto_rawDescOnce.Do(func() {
		file_wasmcloud_runtime_v1_component_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wasmcloud_runtime_v1_component_proto_rawDesc), len(file_wasmcloud_runtime_v1_component_proto_rawDesc)))
	})
	return file_wasmcloud_runtime_v1_component_proto_rawDescData
}

var file_wasmcloud_runtime_v1_component_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wasmcloud_runtime_v1_component_proto_goTypes = []any{
	(*ComponentStartRequest)(nil),  // 0: wasmcloud.runtime.v1.ComponentStartRequest
	(*ComponentStartResponse)(nil), // 1: wasmcloud.runtime.v1.ComponentStartResponse
	nil,                            // 2: wasmcloud.runtime.v1.ComponentStartRequest.AnnotationsEntry
	nil,                            // 3: wasmcloud.runtime.v1.ComponentStartRequest.ConfigEntry
	nil,                            // 4: wasmcloud.runtime.v1.ComponentStartRequest.SecretsEntry
	(*Link)(nil),                   // 5: wasmcloud.runtime.v1.Link
	(*WitInterface)(nil),           // 6: wasmcloud.runtime.v1.WitInterface
	(WorkloadStatus)(0),            // 7: wasmcloud.runtime.v1.WorkloadStatus
}
var file_wasmcloud_runtime_v1_component_proto_depIdxs = []int32{
	2, // 0: wasmcloud.runtime.v1.ComponentStartRequest.annotations:type_name -> wasmcloud.runtime.v1.ComponentStartRequest.AnnotationsEntry
	3, // 1: wasmcloud.runtime.v1.ComponentStartRequest.config:type_name -> wasmcloud.runtime.v1.ComponentStartRequest.ConfigEntry
	4, // 2: wasmcloud.runtime.v1.ComponentStartRequest.secrets:type_name -> wasmcloud.runtime.v1.ComponentStartRequest.SecretsEntry
	5, // 3: wasmcloud.runtime.v1.ComponentStartRequest.imports:type_name -> wasmcloud.runtime.v1.Link
	6, // 4: wasmcloud.runtime.v1.ComponentStartRequest.exports:type_name -> wasmcloud.runtime.v1.WitInterface
	7, // 5: wasmcloud.runtime.v1.ComponentStartResponse.status:type_name -> wasmcloud.runtime.v1.WorkloadStatus
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_wasmcloud_runtime_v1_component_proto_init() }
func file_wasmcloud_runtime_v1_component_proto_init() {
	if File_wasmcloud_runtime_v1_component_proto != nil {
		return
	}
	file_wasmcloud_runtime_v1_link_proto_init()
	file_wasmcloud_runtime_v1_wit_interface_proto_init()
	file_wasmcloud_runtime_v1_workload_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wasmcloud_runtime_v1_component_proto_rawDesc), len(file_wasmcloud_runtime_v1_component_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wasmcloud_runtime_v1_component_proto_goTypes,
		DependencyIndexes: file_wasmcloud_runtime_v1_component_proto_depIdxs,
		MessageInfos:      file_wasmcloud_runtime_v1_component_proto_msgTypes,
	}.Build()
	File_wasmcloud_runtime_v1_component_proto = out.File
	file_wasmcloud_runtime_v1_component_proto_goTypes = nil
	file_wasmcloud_runtime_v1_component_proto_depIdxs = nil
}
